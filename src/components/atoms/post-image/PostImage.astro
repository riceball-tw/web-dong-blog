---
/**
 * This component is for replacing mdx img component
 * mdx components document: https://mdxjs.com/table-of-components/
 */
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components'

type ImageInput = string | ImageMetadata;
type Props = {
  src: ImageInput;
  alt: string;
  title?: string;
};

const { src: imageInput, alt, title } = Astro.props;
function isExternalImage(image: ImageInput): image is string {
  return typeof image === 'string';
}

const ImageWrapper = title ? 'figure' : 'div';
---

<ImageWrapper style={{
  gridColumn: '1 / -1',
  zIndex: 1,
}}>
<div class="flex flex-col w-fit h-fit mx-auto justify-center text-center before:content-[''] before:bg-card">
  <div data-post-image-wrapper class="relative before:animate-pulse before:-z-10  before:inset-0 before:absolute before:rounded-lg rounded-xl shadow-none p-0 md:shadow-2xl md:p-1 backdrop-blur-xl">
    {
      isExternalImage(imageInput) ? (
        <Image class="rounded-lg mx-auto" inferSize src={imageInput} {alt} />
      ) : (
        <Image class="rounded-lg mx-auto" src={imageInput} {alt} />
      )
    }
    <Icon data-post-image-icon class="-z-10 top-1/2 left-1/2 absolute -translate-y-1/2 -translate-x-1/2 animate-pulse" size={64} name="material-symbols:imagesmode-outline-rounded"></Icon>
  </div>
  {title && <figcaption class="text-center">{title}</figcaption>}
</div>
</ImageWrapper>
<script>
  document.querySelectorAll('[data-post-image-wrapper]').forEach(wrapper => {
    const image = wrapper.querySelector<HTMLImageElement>('img')
    const imageIcon = wrapper.querySelector<HTMLElement>('[data-post-image-icon]')
    if (!image || !imageIcon) throw new Error('Image or Image Icon not found');
    if (!image.complete) {
      image.addEventListener('load', () => {
        wrapper.classList.add('before:hidden');
        imageIcon.classList.add('hidden');
      }, { once: true });
      image.addEventListener('error', () => {
        throw new Error('Image failed to load');
      }, { once: true });
    } else {
      wrapper.classList.add('before:hidden');
      imageIcon.classList.add('hidden');
    }
  });
</script>