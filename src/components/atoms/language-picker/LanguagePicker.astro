---
import { languages, changeLanguage, type LanguageKey } from '@/utils/i18n.ts';
import * as m from "@/paraglide/messages";

---
<button data-cy="change-language" title={m.clear_helpful_toad_accept()} class="rounded-full opacity-60 hover:opacity-100" popovertarget="i18n-menu" type="button">
  <!-- i18n icon -->
  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M17.9 17.39c-.26-.8-1.01-1.39-1.9-1.39h-1v-3a1 1 0 0 0-1-1H8v-2h2a1 1 0 0 0 1-1V7h2a2 2 0 0 0 2-2v-.41a7.984 7.984 0 0 1 2.9 12.8M11 19.93c-3.95-.49-7-3.85-7-7.93c0-.62.08-1.22.21-1.79L9 15v1a2 2 0 0 0 2 2m1-16A10 10 0 0 0 2 12a10 10 0 0 0 10 10a10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>
</button>
<div class="bg-transparent text-center md:w-fit w-full" id="i18n-menu" popover>
  <p class="text-2xl tracking-wider text-white font-bold">{m.clear_helpful_toad_accept()}</p>
  <nav class="bg-transparent md:bg-background overflow-hidden md:shadow-lg rounded-lg md:rounded-full mt-6 w-full">
    <ul class="flex flex-col md:flex-row gap-2 p-1">
      <!-- TypeScript: Object.keys return string[] -->
       <!-- https://stackoverflow.com/questions/52856496/typescript-object-keys-return-string -->
      {Object.entries(languages).map(([key, name]) => {
        const isCurrentLocale = Astro.currentLocale === key
        const activeStyle = 'bg-primary text-primary-foreground font-medium'
        const inactiveStyle = 'bg-background'
        const linkStyle = 'rounded-full transition-colors hover:bg-primary-active  hover:text-primary-foreground text-xl p-8 inline-block w-full shadow-lg md:shadow-none'
        const stateStyle = isCurrentLocale ? activeStyle : inactiveStyle

        return (
        <li>
          {isCurrentLocale ? <span data-cy="current-language" class={`${linkStyle} ${stateStyle}`}>{name}</span> : <a data-cy="avaliable-language" class={`${linkStyle} ${stateStyle}`} href={changeLanguage(key as LanguageKey, Astro.url.pathname)}>{name}</a>
          }
        </li>
      )
      })}
    </ul>
  </nav>
</div>

<style>

  [popover]::backdrop {
    background-color: rgba(0, 0, 0, 0.4);
  }

  [popover]:popover-open {
    animation: fadein 0.5s;
    transition: overlay-behavior 0.5s;
    opacity: 1; /* UA default */
  }
  @keyframes fadein {
    from {
      opacity: 0;
    }
  }
  [popover]:closed {
    animation: fadeout 0.5s;
  }
  @keyframes fadeout {
    from {
      display: block;
    }
    to {
      opacity: 0;
    }
  }
</style>