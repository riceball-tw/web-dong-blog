---
import type { CategoryList } from '@/types/category-list'
import toSnakeCase from '@/utils/toSnakeCase';
import * as m from "@/paraglide/messages";

export interface Props extends CategoryList {}

const { category, categoryHref } = Astro.props;
const CategoryElement = categoryHref ? 'a' : 'div';

const translatedCategory = (() => {
  const snakedCategoryType = toSnakeCase(category || '')
  const categoryI18nMethodName = `category_${snakedCategoryType}`;
  const categoryI18n = m[categoryI18nMethodName as keyof typeof m] as () => string;
  if (typeof categoryI18n === 'function') {
    return categoryI18n();
  } else {
    console.warn(`Category translation not found: ${category}`);
    return category;
  }
})()
---

<CategoryElement
  data-astro-prefetch
  class="p-1.5 relative flex gap-1 mr-4 whitespace-nowrap opacity-60 hover:opacity-100"
  {...categoryHref && {
    href: categoryHref,
  }}
>
  <span>@</span>
  <span data-cy="category" data-pagefind-filter={`${m.swift_whole_pony_dare()}:${translatedCategory}`}>{translatedCategory}</span>
</CategoryElement>
