---
import { getCollection } from 'astro:content';
import BlogBase from '@/layouts/BlogBase.astro';
import ShortpostList from '@/components/atoms/shortpost-list/ShortpostList.astro'
import PostImage from '@/components/post/PostImage.astro';
import MarkdownIt from 'markdown-it';

export async function getStaticPaths() {
  const shorts = await getCollection('shortPost');
  const dateSortedPublishedShorts = shorts.sort(
  (a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime(),
);
  return dateSortedPublishedShorts.map((short) => ({
    params: { slug: short.slug },
    props: { short, shorts: dateSortedPublishedShorts },
  }));
}
const { short: shortPost, shorts } = Astro.props;
const { titleTC } = shortPost.data;
const { Content } = await shortPost.render();
const leaveSpaceforLastShortStyle = `padding-bottom: 20vh`
// How to Create Excerpts With Astro
// https://www.paulie.dev/posts/2023/09/how-to-create-excerpts-with-astro/#creating-the-substring
const markdownParser = new MarkdownIt()
const createExcerpt = (body: string, maxLength: number = 160) => markdownParser.render(body).split('\n').slice(0, 6)
  .map((str: string) => str.replace(/<\/?[^>]+(>|$)/g, '').split('\n'))
  .flat()
  .join(' ')
  .substring(0, maxLength)
---
<BlogBase title={titleTC} description={createExcerpt(shortPost.body)} thumbnail={{ src: `/short/${shortPost.slug}`, alt: `${titleTC}` }}>
  <main style={leaveSpaceforLastShortStyle} class="mt-0 px-4 pt-8 sm:mt-[var(--mainNav-height)]">
    <ShortpostList shorts={shorts} currentSlug={shortPost.slug}>
      <Content components={{ img: PostImage }}  />
    </ShortpostList>
  </main>
</BlogBase>
